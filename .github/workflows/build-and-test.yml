name: build-and-test
on:
  push:
    paths-ignore:
      - '**.md'
    branches:
      - master
  pull_request:
    paths-ignore:
      - '**.md'
    branches:
      - master
  workflow_dispatch:
    inputs:
      python_version:
        description: 'Python version to test'
        required: false
        default: '3.11'
        type: choice
        options:
          - '3.11'
          - '3.10'
          - '3.9'
      skip_docker_build:
        description: 'Skip Docker image building'
        required: false
        default: false
        type: boolean
      skip_tests:
        description: 'Skip running tests'
        required: false
        default: false
        type: boolean
      test_scope:
        description: 'Test scope to run'
        required: false
        default: 'all'
        type: choice
        options:
          - 'all'
          - 'unit'
          - 'integration'
          - 'docker'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ github.event.inputs.python_version || '3.11' }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ github.event.inputs.python_version || '3.11' }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip pipx
          pipx install poetry
          make install

      - name: Run unit tests
        if: ${{ !github.event.inputs.skip_tests && (github.event.inputs.test_scope == 'all' || github.event.inputs.test_scope == 'unit') }}
        run: make test

      - name: Build Docker images
        if: ${{ !github.event.inputs.skip_docker_build }}
        run: make docker-build-all

      - name: Run Docker tests
        if: ${{ !github.event.inputs.skip_tests && (github.event.inputs.test_scope == 'all' || github.event.inputs.test_scope == 'docker') }}
        run: make test-docker-compose

      - name: Run integration tests
        if: ${{ !github.event.inputs.skip_tests && (github.event.inputs.test_scope == 'all' || github.event.inputs.test_scope == 'integration') }}
        run: |
          echo "Integration tests would run here"
          # Add your integration test commands here

      - name: Test summary
        if: ${{ !github.event.inputs.skip_tests }}
        run: |
          echo "Test Summary:"
          echo "Python Version: ${{ github.event.inputs.python_version || '3.11' }}"
          echo "Test Scope: ${{ github.event.inputs.test_scope || 'all' }}"
          echo "Docker Build: ${{ !github.event.inputs.skip_docker_build }}"
          echo "Tests Skipped: ${{ github.event.inputs.skip_tests }}"
   